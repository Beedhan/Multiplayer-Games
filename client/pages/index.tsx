import {
  Button,
  Center,
  FormControl,
  HStack,
  Input,
  Spacer,
  useToast,
  VStack,
} from "@chakra-ui/react";
import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import { useGame } from "../context/GameContext";
import styles from "../styles/Home.module.css";
import { socket } from "../utils/socket";

const Home: NextPage = () => {
  const [lobbyCode, setLobbyCode] = useState("");
  const [name, setName] = useState("");
  const router = useRouter();
  const toast = useToast();
  const { setRoomCode, setIsAdmin } = useGame();

  const isError = name === "" || lobbyCode === "";
  const handleCreate = () => {
    socket.emit("createLobby", { name }, (message: any) => {
      console.log(message);
      if (!message.error) {
        setRoomCode(message.roomCode);
        setIsAdmin(true);
        router.push("/lobby");
      } else {
        toast({
          title: message.error,
          description: "Please Refresh and try again",
          status: "error",
        });
      }
    });
  };
  const fetchRooms = () => {
    socket.emit("findAllLobby", (message: any) => {
      console.log(message);
    });
  };
  const joinLobby = () => {
    socket.emit("joinLobby", { roomCode: lobbyCode, name }, (message: any) => {
      console.log(message);
      if (!message.error) {
        setRoomCode(lobbyCode);
        router.push("/lobby");
      } else {
        toast({
          title: message.error,
          description: "Please Refresh and try again",
          status: "error",
        });
      }
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Center height="100vh">
        <VStack spacing={"20px"}>
          <HStack>
            <Button
              colorScheme="green"
              onClick={handleCreate}
              disabled={name === ""}
            >
              Create Room
            </Button>
            <Button colorScheme="messenger" onClick={fetchRooms}>
              Fetch Room
            </Button>
          </HStack>
          <HStack>
            <FormControl isInvalid={isError}>
              <Input
                placeholder="Name"
                value={name}
                required
                mb={"10px"}
                onChange={(e) => setName(e.target.value)}
              />
              <Spacer />
              <Input
                value={lobbyCode}
                placeholder="Room Id"
                required
                mb={"10px"}
                onChange={(e) => setLobbyCode(e.target.value)}
              />
              <Button
                colorScheme="green"
                onClick={joinLobby}
                type="submit"
                disabled={isError}
                textAlign="end"
              >
                Join
              </Button>
            </FormControl>
          </HStack>
        </VStack>
      </Center>
    </div>
  );
};

export default Home;
